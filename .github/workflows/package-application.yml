name: Build on Windows
on:
  push:
    branches: [ main ]
jobs:
  create-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
      - id: set-matrix
        run: echo "matrix=$(ls -d applications/* | jq -R -s -c 'split("\n")[:-1]')" >> $GITHUB_OUTPUT
  build:
    needs: create-matrix
    runs-on: windows-latest
    strategy:
      matrix:
        template: ${{ fromJson(needs.create-matrix.outputs.matrix) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Get Template Values
        id: get-values
        shell: pwsh
        run: |
          $app=(Get-Content -Raw  ${{matrix.template}}/application.json | ConvertFrom-Json)
          Write-Output "TemplateXmlFileName=$($app.TemplateXmlFileName)" >> $GITHUB_OUTPUT
          Write-Output "InstallationFileUrl=$($app.InstallationFileUrl)" >> $GITHUB_OUTPUT
          Write-Output "InstallationFileChecksum=$($app.InstallationFileChecksum)" >> $GITHUB_OUTPUT
          Write-Output "InstallationFileName=$($app.InstallationFileName)" >> $GITHUB_OUTPUT
          Write-Output "ApplicationName=${{matrix.template}}.Split("/")[-1]" >> $GITHUB_OUTPUT
          Get-Content $GITHUB_OUTPUT
      - name: Install MSIX Packaging Tool
        env:
            MSIX_PACKAGING_TOOL_INSTALLTION_FILE_URL: ${{ vars.MSIX_PACKAGING_TOOL_INSTALLTION_FILE_URL }}
            MSIX_PACKAGING_TOOL_LICENSE_FILE_URL: ${{ vars.MSIX_PACKAGING_TOOL_LICENSE_FILE_URL }}
        shell: pwsh
        run: .\scripts\Install-MsixPackagingTool.ps1 -MSIXPackagingToolInstallationFileUrl $env:MSIX_PACKAGING_TOOL_INSTALLTION_FILE_URL -MSIXPackagingToolLicenseFileUrl $env:MSIX_PACKAGING_TOOL_LICENSE_FILE_URL
      - name: Download Installtion File
        shell: pwsh
        run: .\scripts\Download-InstallationFile.ps1 -InstallationFileUrl "${{ steps.get-values.outputs.InstallationFileUrl }}" -InstallationFileChecksum "${{ steps.get-values.outputs.InstallationFileChecksum }}" -InstallationFileName "${{ steps.get-values.outputs.InstallationFileName }}"
