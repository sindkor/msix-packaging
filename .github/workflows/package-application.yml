name: Build on Windows
on:
  push:
    branches: [ main ]
jobs:
  create-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
      - id: set-matrix
        run: echo "matrix=$(git --no-pager diff --dirstat=files,0 HEAD~1 -- `find . -type d -name 'applications'` | sed -E 's/^[ 0-9.]+% //g' | jq -R -s -c 'split("\n")[:-1]')" >> $GITHUB_OUTPUT
  build:
    needs: create-matrix
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        template: ${{ fromJson(needs.create-matrix.outputs.matrix) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Get Template Values
        id: get-values
        shell: pwsh
        run: |
          $app=(Get-Content -Raw  ${{matrix.template}}/application.json | ConvertFrom-Json)
          $appName="${{matrix.template}}".Split("/")[-2]
          Write-Output "TEMPLATE_XML_FILE_NAME=$($app.TemplateXmlFileName)" >> $env:GITHUB_ENV
          Write-Output "INSTALLATION_FILE_URL=$($app.InstallationFileUrl)" >> $env:GITHUB_ENV
          Write-Output "INSTALLATION_FILE_CHECKSUM=$($app.InstallationFileChecksum)" >> $env:GITHUB_ENV
          Write-Output "INSTALLATION_FILE_NAME=$($app.InstallationFileName)" >> $env:GITHUB_ENV
          Write-Output "APPLICATION_NAME=$appName" >> $env:GITHUB_ENV
          Get-Content $env:GITHUB_ENV
      - name: Install MSIX Packaging Tool
        env:
            MSIX_PACKAGING_TOOL_INSTALLTION_FILE_URL: ${{ vars.MSIX_PACKAGING_TOOL_INSTALLTION_FILE_URL }}
            MSIX_PACKAGING_TOOL_LICENSE_FILE_URL: ${{ vars.MSIX_PACKAGING_TOOL_LICENSE_FILE_URL }}
        shell: pwsh
        run: .\scripts\Install-MsixPackagingTool.ps1 -MSIXPackagingToolInstallationFileUrl $env:MSIX_PACKAGING_TOOL_INSTALLTION_FILE_URL -MSIXPackagingToolLicenseFileUrl $env:MSIX_PACKAGING_TOOL_LICENSE_FILE_URL
      - name: Download Installtion File
        shell: pwsh
        run: .\scripts\Download-InstallationFile.ps1 -InstallationFileUrl $env:INSTALLATION_FILE_URL -InstallationFileChecksum $env:INSTALLATION_FILE_CHECKSUM -InstallationFileName $env:INSTALLATION_FILE_NAME
      - name: Package Application
        shell: pwsh
        run: |
          .\scripts\Package-Application.ps1 `
            -InstallationFilePath "$env:TEMP\MSIXInstallationFiles\$env:INSTALLATION_FILE_NAME" `
            -ApplicationTemplateFilePath ".\applications\$env:APPLICATION_NAME\$env:TEMPLATE_XML_FILE_NAME" `
            -MSIXOutputFilePath ".\out\$env:APPLICATION_NAME.msix"
