name: Build on Windows
on: workflow_dispatch
jobs:
  create-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
      - id: set-matrix
        run: echo "matrix=$(cat applications/*/application.json | jq -cs)" >> $GITHUB_OUTPUT
  build:
    needs: create-matrix
    runs-on: windows-latest
    strategy:
      matrix:
        template: ${{ fromJson(needs.create-matrix.outputs.matrix) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Print Template
        shell: pwsh
        run: |
          Write-Output "InstallationFileUrl: ${{ matrix.template.InstallationFileUrl }}" 
          Write-Output "InstallationFileChecksum: ${{ matrix.template.InstallationFileChecksum }}"
          Write-Output "InstallationFileName: ${{ matrix.template.InstallationFileName }}"
          Write-Output "TemplateXmlFileName: ${{ matrix.template.TemplateXmlFileName }}"
      - name: Install MSIX Packaging Tool
        env:
            MSIX_PACKAGING_TOOL_INSTALLTION_FILE_URL: ${{ vars.MSIX_PACKAGING_TOOL_INSTALLTION_FILE_URL }}
            MSIX_PACKAGING_TOOL_LICENSE_FILE_URL: ${{ vars.MSIX_PACKAGING_TOOL_LICENSE_FILE_URL }}
        shell: pwsh
        run: .\scripts\Install-MsixPackagingTool.ps1 -MSIXPackagingToolInstallationFileUrl $env:MSIX_PACKAGING_TOOL_INSTALLTION_FILE_URL -MSIXPackagingToolLicenseFileUrl $env:MSIX_PACKAGING_TOOL_LICENSE_FILE_URL
      - name: Download Installtion File
        shell: pwsh
        run: .\scripts\Download-InstallationFile.ps1 -InstallationFileUrl "${{ matrix.template.InstallationFileUrl }}" -InstallationFileChecksum "${{ matrix.template.InstallationFileChecksum }}" -DownloadFileName "${{ matrix.template.InstallationFileName }}"
